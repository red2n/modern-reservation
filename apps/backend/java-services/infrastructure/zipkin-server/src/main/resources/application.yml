server:
  port: 9411

spring:
  application:
    name: zipkin-server
  config:
    import: "configserver:http://localhost:8888/config"
  cloud:
    config:
      username: config-admin
      password: ${CONFIG_SERVER_PASSWORD:admin123}

# Zipkin Configuration
zipkin:
  storage:
    type: mem
    # For production, consider using MySQL, Elasticsearch, or Cassandra
    # mysql:
    #   host: localhost
    #   port: 3306
    #   username: zipkin
    #   password: zipkin
    #   db: zipkin
  collector:
    # Sample rate - 1.0 means 100% of traces (adjust for production)
    sample-rate: 1.0
    http:
      enabled: true
    kafka:
      enabled: false
    rabbitmq:
      enabled: false

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10

# Logging Configuration
logging:
  level:
    com.modernreservation: DEBUG
    zipkin2: INFO
    org.springframework.cloud: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: logs/zipkin-server.log

# Application Information
info:
  app:
    name: Modern Reservation Zipkin Server
    description: Distributed tracing and monitoring service
    version: 2.0.0
    team: Modern Reservation Development Team
